#include <bits/stdc++.h>
#define fi first
#define se second
#define pb push_back
#define mp make_pair
#define MOD 1000000007
#define INF 1234567890
#define pii pair<int,int>
#define LL long long
using namespace std;

int a[1005][1005];
int dp[1005][1005];
int x, y;

int qxy(int rq, int cq) {
    if (rq-x < 0) return 0;
    if (cq-y < 0) return 0;
    return dp[rq][cq] - dp[rq-x][cq] - dp[rq][cq-y] + dp[rq-x][cq-y];
}

int qyx(int rq, int cq) {
    if (rq-y < 0) return 0;
    if (cq-x < 0) return 0;
    return dp[rq][cq] - dp[rq-y][cq] - dp[rq][cq-x] + dp[rq-y][cq-x];
}

bool overlap(int l1x, int l1y, int r1x, int r1y, int l2x, int l2y, int r2x, int r2y) {
    if (l1x == r1x || l1y == r1y || l2x == r2x || l2y == r2y) return true;
    if (l1x > r2x || l2x > r1x) return false;
    if (r1y > l2y || r2y > l1y) return false;
    return true;
}

int solve(int r1, int c1, int r2, int c2) {
    int ret = 0;
    if (!overlap(r1-x, c1-y, r1, c1, r2-x, c2-y, r2, c2)) {
        ret = max(ret, qxy(r1, c1) + qxy(r1, c1));
    }
    if (!overlap(r1-y, c1-x, r1, c1, r2-x, c2-y, r2, c2)) {
        ret = max(ret, qyx(r1, c1) + qxy(r1, c1));
    }
    if (!overlap(r1-x, c1-y, r1, c1, r2-y, c2-x, r2, c2)) {
        ret = max(ret, qxy(r1, c1) + qyx(r1, c1));
    }
    if (!overlap(r1-y, c1-x, r1, c1, r2-y, c2-x, r2, c2)) {
        ret = max(ret, qyx(r1, c1) + qyx(r1, c1));
    }
    return ret;
}

int main () {
    //clock_t start = clock();
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
    int r,c;
    cin >> r >> c;
    cin >> x >> y;
    for (int i=1;i<=r;i++) {
        for (int j=1;j<=c;j++) {
            cin >> a[i][j];
            dp[i][j] = a[i][j];
        }
    }
    for (int i=1;i<=r;i++) {
        for (int j=1;j<=c;j++) {
            dp[i][j] += dp[i-1][j];
        }
    }
    for (int i=1;i<=r;i++) {
        for (int j=1;j<=c;j++) {
            dp[i][j] += dp[i][j-1];
        }
    }

    // cout << endl;
    // for (int i=1;i<=r;i++) {
    //     for (int j=1;j<=c;j++) {
    //         cout << qxy(i, j) << " ";
    //     }
    //     cout << endl;
    // }

    // cout << endl;
    // for (int i=1;i<=r;i++) {
    //     for (int j=1;j<=c;j++) {
    //         cout << qyx(i, j) << " ";
    //     }
    //     cout << endl;
    // }

    int ans = 0;
    for (int i=1;i<=r;i++) {
        for (int j=1;j<=c;j++) {
            for (int k=1;k<=r;k++) {
                for (int l=1;l<=c;l++) {
                    if (solve(i, j, k, l) > ans) {
                        ans = max(ans, solve(i, j, k, l));
                        cout << i << " " << j << " " << k << " " << l << " " << ans << endl;
                    }
                }
            }
        }
    }
    cout << ans << endl;
    //cerr << fixed << setprecision(3) << (clock()-start)*1./CLOCKS_PER_SEC << endl;
    return 0;
}